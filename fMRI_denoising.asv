% fMRI denoising pipeline
% Written by Payam S. Shabestari, Zurich, 01.2025
% email: payam.sadeghishabestari@uzh.ch
% This script is written mainly for Antinomics project. However It could be used for other purposes.

%% locate structural (T1) and functional (rest fMRI) data
fmri_dir = "/Volumes/Extreme_SSD/payam_data/antinomics_data/subjects_fsl_dir";
smri_dir = "/Volumes/Extreme_SSD/payam_data/antinomics_data/t1_denoised";
cwd = pwd;
subjects = dir(fmri_dir);
subjects = subjects([subjects.isdir] & ~startsWith({subjects.name},'.'));
nsubs     = numel(subjects);
nsess      = 2;

structurals  = cell(nsubs,1);
functionals  = cell(nsubs,2);
gm_masks     = cell(nsubs,1);
wm_masks     = cell(nsubs,1);
csf_masks    = cell(nsubs,1);
brain_masks  = cell(nsubs,1);
motion_files = cell(nsubs,2);

for i = 1:nsubs
    sid = subjects(i).name;

    % structural file
    smri_file = fullfile(smri_dir,[sid '_denoised.nii']);
    if ~isfile(smri_file)
        error('Missing structural for subject %s', sid);
    end
    structurals{i,1} = smri_file;

    % session 1 functional
    s1_file = fullfile(fmri_dir,sid,'t2_s1_norm.nii.gz');
    if ~isfile(s1_file)
        error('Missing session1 fMRI for subject %s', sid);
    end
    functionals{i,1} = s1_file;

    % session 2 functional
    s2_file = fullfile(fmri_dir,sid,'t2_s2_norm.nii.gz');
    if ~isfile(s2_file)
        error('Missing session2 fMRI for subject %s', sid);
    end
    functionals{i,2} = s2_file;

    % GM / WM / whole-brain masks
    gm_file    = fullfile(fmri_dir,sid,'gm_in_func.nii.gz');
    wm_file    = fullfile(fmri_dir,sid,'wm_in_func.nii.gz');
    csf_file   = fullfile(fmri_dir,sid,'csf_in_func.nii.gz');
    brain_file = fullfile(fmri_dir,sid,'brain_mask_in_func.nii.gz');

    if ~isfile(gm_file) || ~isfile(wm_file) || ~isfile(csf_file) || ~isfile(brain_file)
        error('Missing one of the tissue masks for subject %s', sid);
    end
    gm_masks{i,1}    = gm_file;
    wm_masks{i,1}    = wm_file;
    csf_masks{i,1}   = csf_file;
    brain_masks{i,1} = brain_file;

    motion_files{i,1} = fullfile(fmri_dir,sid,'t2_s1_mc.par');
    motion_files{i,2} = fullfile(fmri_dir,sid,'t2_s2_mc.par');
    if ~isfile(motion_files{i,1}) || ~isfile(motion_files{i,2})
        error('Missing motion file for subject %s', sid);
    end

end

%% setup
clear batch;
batch.filename=fullfile(cwd,'Antinomics.mat');            
batch.Setup.nsubjects=37;
batch.Setup.RT=2.5;    
batch.Setup.acquisitiontype=1;
batch.Setup.structurals  = structurals';
batch.Setup.functionals  = functionals';
batch.Setup.masks.White = wm_masks';
batch.Setup.masks.CSF   = csf_masks';
batch.Setup.masks.Grey  = gm_masks';   % needed so CONN can define the whole-brain mask internally
batch.Setup.masks.Brain = brain_masks';
%batch.Setup.covariates.names{1} = 'motion';
%batch.Setup.covariates.files{1} = motion_files';

%batch.Setup.conditions.names={'rest'};
%for ncond=1
%     for nsub=1:nsubs
%         for nses=1:nsess
%             batch.Setup.conditions.onsets{ncond}{nsub}{nses}=0;
%             batch.Setup.conditions.durations{ncond}{nsub}{nses}=inf;
%         end
%     end
%end     


batch.Setup.done = 1;

%% Denoising
batch.Denoising.confounds.names      = { ...
    'White Matter', ...
    'CSF', ...
    'Grey Matter', ...   % whole-brain signal
    'motion' ...
    };
batch.Denoising.confounds.dimensions = {1, 1, 1, 6};
batch.Denoising.confounds.deriv      = {1, 1, 1, 1};  
batch.Denoising.filter = [0.01 0.15];
batch.Denoising.detrending = 1;   
batch.Denoising.despiking   = 0;
batch.Denoising.done        = 1;
batch.Denoising.overwrite   = 'Yes';

%% Run all analyses
conn_batch(batch);


